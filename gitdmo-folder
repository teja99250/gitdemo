import requests
from datetime import datetime

GITHUB_API_BASE_URL = "https://api.github.com/repos/"

def make_api_request(url, params=None):
    try:
        response = requests.get(url, params=params)
        response.raise_for_status() # Raise an HTTPError for bad responses
        return response.json()
    except requests.exceptions.HTTPError as http_err:
        if response.status_code == 404:
            print("GitHub API endpoint not found. Check repository and endpoint path.")
        else:
            print(f"HTTP error occurred: {http_err}")
        return None
    except requests.exceptions.RequestException as e:
        print(f"Failed to make API request: {e}")
        return None

def get_pull_requests(repo_owner, repo_name, start_date):
    base_url = f"{GITHUB_API_BASE_URL}{repo_owner}/{repo_name}/pulls"
    params = {'state': 'all'}

    iso_start_date = datetime.strptime(start_date, '%d-%m-%Y').isoformat()
    params['created'] = f'>{iso_start_date}'

    # Make the API request using the helper function
    return make_api_request(base_url, params=params)

def main():
    repo_owner = 'Sai44111'
    repo_name = 'par-orchestration-system-tests'
    start_date = '01-06-2023'

    pull_requests = get_pull_requests(repo_owner, repo_name, start_date)

    if pull_requests:
        print(f"Number of pull requests since {start_date}: {len(pull_requests)}")
        for pr in pull_requests:
            print(f"PR #{pr['number']} - {pr['title']}")

if __name__ == "__main__":
    main()
